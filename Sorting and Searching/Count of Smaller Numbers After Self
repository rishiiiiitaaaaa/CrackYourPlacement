class Solution {
public:
  
     
        int binarySearch(vector<int> &temp,int key){
        int idx = -1;
        int low = 0;
        int high = temp.size()-1;
        while(low <= high){
            int mid = low + (high-low)/2;
            if(temp[mid] == key){
                idx = mid;
                high = mid - 1;
            }
            else if(temp[mid] > key){
                high = mid - 1;
            }
            else{
                low = mid  + 1;
            }
        }
        return idx;
    }
     vector<int> countSmaller(vector<int>& nums) {
        // code here
        vector<int> ans;
        vector<int> temp(nums.begin(),nums.end());
        sort(begin(temp),end(temp));
        for(int i=0; i < nums.size(); i++){
            int idx = binarySearch(temp,nums[i]);
            ans.push_back(idx);
            temp.erase(temp.begin()+idx);
        }
        return ans;
    }
    
};
