class Solution {
public:
 ListNode* reverse(ListNode* &head){
    ListNode* prev=NULL;
    ListNode* curr=head;
    ListNode* forward=curr->next;
    while(curr!=NULL){
        forward=curr->next;
        curr->next=prev;
        prev=curr;
        curr=forward;
    }
    return prev;
}
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
       ListNode* head1=reverse(l1);
      ListNode* head2=reverse(l2);
        int sum=0;
        int carry=0;
        ListNode* result=new ListNode();
        while(head1!=NULL || head2!=NULL ){
            if(head1!=NULL){
                sum+=head1->val;
                head1=head1->next;
            }
            if(head2!=NULL){
                sum+=head2->val;
                head2=head2->next;
            }
           result->val=sum%10;
           carry=sum/10;
           ListNode* newNode=new ListNode(carry);
           newNode->next=result;
           result=newNode;
           sum=carry;
        }
       return carry==0? result->next: result;
    }
};
